:py:mod:`nautobot_ssot_vsphere.diffsync.adapters`
=================================================

.. py:module:: nautobot_ssot_vsphere.diffsync.adapters

.. autoapi-nested-parse::

   Collection of adapters.



Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   shared/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   adapter_nautobot/index.rst
   adapter_vsphere/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   nautobot_ssot_vsphere.diffsync.adapters.NautobotDiffSync
   nautobot_ssot_vsphere.diffsync.adapters.VsphereDiffSync




.. py:class:: NautobotDiffSync(job, sync, sync_vsphere_tagged_only: bool, cluster_filter: nautobot.virtualization.models.Cluster, *args, **kwargs)

   Bases: :py:obj:`nautobot_ssot_vsphere.diffsync.adapters.shared.DiffSyncModelAdapters`

   Nautobot adapter for DiffSync.

   .. py:attribute:: objects_to_delete
      

      

   .. py:attribute:: _cluster
      :annotation: :ClassVar[Any]

      

   .. py:attribute:: _clustergroup
      :annotation: :ClassVar[Any]

      

   .. py:attribute:: _virtualmachine
      :annotation: :ClassVar[Any]

      

   .. py:attribute:: _vminterface
      :annotation: :ClassVar[Any]

      

   .. py:attribute:: _ipaddress
      :annotation: :ClassVar[Any]

      

   .. py:method:: sync_complete(source: diffsync.DiffSync, *args, **kwargs)

      Clean up function for DiffSync sync.

      Once the sync is complete, this function runs deleting any objects
      from Nautobot that need to be deleted in a specific order.

      Args:
          source (DiffSync): DiffSync


   .. py:method:: get_initial_cluster(ssot_tag: nautobot.extras.models.Tag)

      Identify the site objects based on user defined job inputs.

      Args:
          ssot_tag (Tag): Tag used for filtering


   .. py:method:: load_clustergroups()

      Load Cluster Groups.

      This can be impacted by the Cluster Filter.


   .. py:method:: get_initial_vms(ssot_tag: nautobot.extras.models.Tag)

      Identify the VirtualMachine objects based on user defined job inputs.

      Args:
          ssot_tag (Tag): Tag used for filtering


   .. py:method:: load_virtual_machines(ssot_tag: nautobot.extras.models.Tag)

      Load Nautobot Virtual Machines.


   .. py:method:: load_ipaddress(nautobot_vm_interface, diffsync_vminterface, diffsync_vm_object)

      Load Interface IP Addresses.


   .. py:method:: load_vm_interfaces(nautobot_virtual_machine, diffsync_vm_object)

      Load VM Interfaces.


   .. py:method:: load_clusters(ssot_tag)

      Load Clusters.


   .. py:method:: load_data()

      Add Nautobot Site objects as DiffSync Location models.


   .. py:method:: load()

      Load data from Nautobot.



.. py:class:: VsphereDiffSync(job, sync, client: nautobot_ssot_vsphere.utilities.vsphere_client.VsphereClient, cluster_filter, *args, **kwargs)

   Bases: :py:obj:`nautobot_ssot_vsphere.diffsync.adapters.shared.DiffSyncModelAdapters`

   Nautobot adapter for DiffSync.

   .. py:method:: load_cluster_groups()

      Load Cluster Groups (DataCenters).


   .. py:method:: load_virtualmachines(cluster, diffsync_cluster)

      Load Virtual Machines.


   .. py:method:: load_ip_addresses(vsphere_vm_interfaces, mac_address, diffsync_vminterface)

      Load VM IP Addresses into Interfaces.

      Compare the current NIC MAC to grab any IP's associated.


   .. py:method:: load_primary_ip(ipv4_addresses: List, ipv6_addresses: List, diffsync_virtualmachine)

      Determine Primary IP of Virtual Machine.


   .. py:method:: load_vm_interfaces(vsphere_virtual_machine, vm_id, diffsync_virtualmachine)

      Load VM Interfaces.


   .. py:method:: load_data()

      Load all clusters from vSphere.


   .. py:method:: load_standalone_vms()

      Load all VM's from vSphere.


   .. py:method:: load()

      Load data from vSphere.



