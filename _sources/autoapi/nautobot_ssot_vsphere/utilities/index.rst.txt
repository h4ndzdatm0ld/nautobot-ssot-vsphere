:py:mod:`nautobot_ssot_vsphere.utilities`
=========================================

.. py:module:: nautobot_ssot_vsphere.utilities

.. autoapi-nested-parse::

   Utilities.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   nautobot_utils/index.rst
   vsphere_client/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   nautobot_ssot_vsphere.utilities.VsphereClient



Functions
~~~~~~~~~

.. autoapisummary::

   nautobot_ssot_vsphere.utilities.tag_object



.. py:class:: VsphereClient(vsphere_uri: str = defaults.VSPHERE_URI, username: str = defaults.VSPHERE_USERNAME, password: str = defaults.VSPHERE_PASSWORD, verify_ssl: bool = is_truthy(defaults.VSPHERE_VERIFY_SSL))

   Class for interacting with VMWare vSphere.

   .. py:method:: _request(self, method: str, path: str, **kwargs)

      Return a response object after making a request to by other methods.

      Args:
          method (str): Request method to call in self.session.
          path (str): uri path to call.

      Returns:
          :class:`~requests.Response`: Response from the API.


   .. py:method:: get_vms(self) -> Dict

      Get VMs.


   .. py:method:: get_vms_from_cluster(self, cluster: str) -> Dict

      Get VMs.


   .. py:method:: get_vms_from_dc(self, datacenter: str) -> Dict

      Get VMs.


   .. py:method:: get_datacenters(self) -> Dict

      Get datacenters.


   .. py:method:: get_datacenter_details(self, datacenter: str) -> Dict

      Get datacenters.


   .. py:method:: get_clusters(self) -> Dict

      Get Clusters.


   .. py:method:: get_clusters_from_dc(self, datacenter: str) -> Dict

      Get Clusters.


   .. py:method:: get_cluster_details(self, cluster_name: str) -> Dict

      Get Clusters.


   .. py:method:: get_vm_details(self, vm_id: str) -> Dict

      Get all VMs details.


   .. py:method:: get_vm_interfaces(self, vm_id: str) -> Dict

      Get all VM interfaces.


   .. py:method:: get_host(self)

      Get Host.



.. py:function:: tag_object(nautobot_object: Any, custom_field: str = 'ssot-synced-from-vsphere', tag_name: str = 'SSoT Synced from vSphere')

   Apply the given tag and custom field to the identified object.

   Args:
       nautobot_object (Any): Nautobot ORM Object
       custom_field (str): Name of custom field to update
       tag_name (Optional[str], optional): Tag name. Defaults to "SSoT Synced From vsphere".


